[{"C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\index.js":"1","C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\reducer.js":"2","C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\App.js":"3","C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\reportWebVitals.js":"4","C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\StateProvider.js":"5","C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\Checkout.js":"6","C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\Home.js":"7","C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\Header.js":"8","C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\firebase.js":"9","C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\Login.js":"10","C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\Footer.js":"11","C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\Orders.js":"12","C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\Payment.js":"13","C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\stripePromise.js":"14","C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\Subtotal.js":"15","C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\Product.js":"16","C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\CheckoutProduct.js":"17","C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\Order.js":"18","C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\axios.js":"19"},{"size":692,"mtime":1607307041033,"results":"20","hashOfConfig":"21"},{"size":1178,"mtime":1607465697159,"results":"22","hashOfConfig":"21"},{"size":1966,"mtime":1612818005101,"results":"23","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"21"},{"size":467,"mtime":1607307148884,"results":"25","hashOfConfig":"21"},{"size":1151,"mtime":1607318073452,"results":"26","hashOfConfig":"21"},{"size":2539,"mtime":1608583722332,"results":"27","hashOfConfig":"21"},{"size":2949,"mtime":1608586695872,"results":"28","hashOfConfig":"21"},{"size":608,"mtime":1607315505666,"results":"29","hashOfConfig":"21"},{"size":2736,"mtime":1612293886157,"results":"30","hashOfConfig":"21"},{"size":2165,"mtime":1607365853759,"results":"31","hashOfConfig":"21"},{"size":1250,"mtime":1607469754382,"results":"32","hashOfConfig":"21"},{"size":5377,"mtime":1612817353402,"results":"33","hashOfConfig":"21"},{"size":233,"mtime":1612817855338,"results":"34","hashOfConfig":"21"},{"size":1062,"mtime":1607456134047,"results":"35","hashOfConfig":"21"},{"size":1785,"mtime":1608585126124,"results":"36","hashOfConfig":"21"},{"size":1609,"mtime":1607469649971,"results":"37","hashOfConfig":"21"},{"size":1038,"mtime":1607469596974,"results":"38","hashOfConfig":"21"},{"size":347,"mtime":1607470946056,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"2od2pt",{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\index.js",[],["89","90"],"C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\reducer.js",["91","92"],"import { Satellite } from \"@material-ui/icons\";\r\n\r\nexport const initialState = {\r\n  basket: [],\r\n  user: null,\r\n};\r\n\r\n//Selector allows the useStateAPI\r\nexport const getBasketTotal = (basket) =>\r\n  basket?.reduce((amount, item) => item.price + amount, 0); //sums the basket\r\n\r\nconst reducer = (state, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case \"ADD_TO_BASKET\":\r\n      return {\r\n        ...state,\r\n        basket: [...state.basket, action.item],\r\n      };\r\n      case \"EMPTY_BASKET\":\r\n        return {\r\n          ...state,\r\n          basket: []\r\n        }\r\n    case \"REMOVE_FROM_BASKET\":\r\n      const index = state.basket.findIndex(\r\n        (basketItem) => basketItem.id === action.id\r\n      );\r\n      let newBasket = [...state.basket];\r\n      if (index >= 0) {\r\n        newBasket.splice(index, 1);\r\n      } else {\r\n        console.warn(\r\n          \"cant remove product (id: ${action.id}) as its not in the cart\"\r\n        );\r\n      }\r\n      return {\r\n        ...state,\r\n        basket: newBasket,\r\n      };\r\n    case \"SET_USER\":\r\n      return { ...state, user: action.user };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\App.js",["93","94"],"import React, { useEffect } from \"react\";\nimport Header from \"./Header\";\nimport \"./App.css\";\nimport Home from \"./Home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Checkout from \"./Checkout.js\";\nimport Login from \"./Login\";\nimport { useStateValue } from \"./StateProvider\";\nimport { auth } from \"./firebase\";\nimport Payment from \"./Payment\";\nimport Footer from \"./Footer\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport Orders from \"./Orders\";\nimport { deliverPromise } from \"./stripePromise\";\n\n//deliverPromise is in separate file for security. and is in .gitignore\nconst promise = deliverPromise();\n\nfunction App() {\n  const [{}, dispatch] = useStateValue();\n  useEffect(() => {\n    //will only run once when the app component loads...\n    auth.onAuthStateChanged((authUser) => {\n      console.log(\"The User Is >>> \", authUser);\n      if (authUser) {\n        //the user just logged in / the user was logged in\n        dispatch({\n          type: \"SET_USER\",\n          user: authUser,\n        });\n      } else {\n        //the user is logged out\n        dispatch({\n          type: \"SET_USER\",\n          user: null,\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/checkout\">\n            <Header />\n            <Checkout />\n          </Route>\n          <Route path=\"/Payment\">\n            <Header />\n            <Elements stripe={promise}>\n              <Payment />\n            </Elements>\n            <Footer />\n          </Route>\n          <Route path=\"/Orders\">\n            <Header />\n            <Orders />\n          </Route>\n          <Route path=\"/\">\n            {\" \"}\n            {/* Default has to be at the bottom */}\n            <Header />\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\reportWebVitals.js",[],"C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\StateProvider.js",[],"C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\Checkout.js",["95"],"import React from \"react\";\r\nimport \"./checkout.css\";\r\nimport CheckoutProduct from \"./CheckoutProduct\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport Subtotal from \"./Subtotal.js\";\r\n\r\nfunction Checkout() {\r\n  const [{ basket, user }, dispatch] = useStateValue();\r\n  return (\r\n    <div className=\"checkout\">\r\n      <div className=\"checkout-left\">\r\n        <img\r\n          className=\"checkout-ad\"\r\n          src=\"https://images-na.ssl-images-amazon.com/images/G/02/UK_CCMP/TM/OCC_Amazon1._CB423492668_.jpg\"\r\n          alt=\"\"\r\n        />\r\n        <div>\r\n            <h3>Hello, {user ? user.email : 'Guest'}</h3>\r\n          <h2 className=\"checkout-title\">Your Shopping Cart</h2>\r\n          {/* items in cart */}\r\n          \r\n          {basket.map((item) => (\r\n            <CheckoutProduct\r\n              id={item.id}\r\n              title={item.title}\r\n              image={item.image}\r\n              price={item.price}\r\n              rating={item.rating}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"checkout-right\">\r\n        <Subtotal />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Checkout;\r\n","C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\Home.js",[],"C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\Header.js",["96","97"],"import React from \"react\";\r\nimport \"./Header.css\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { auth } from \"./firebase\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nfunction Header() {\r\n  const [{ basket, user }, dispatch] = useStateValue();\r\n  const handleAuthentication = () => {\r\n    if (user) {\r\n      auth.signOut();\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"header\">\r\n        {/* logo */}\r\n        <Link to=\"/\">\r\n          <img\r\n            className=\"header-logo\"\r\n            src=\"http://pngimg.com/uploads/amazon/amazon_PNG11.png\"\r\n          />\r\n        </Link>\r\n\r\n        {/* search bar */}\r\n        <div className=\"header-search\">\r\n          <input className=\"header-searchInput\" type=\"text\" />\r\n          <SearchIcon className=\"header-searchIcon\" />\r\n          {/* Logo */}\r\n        </div>\r\n        <div className=\"header-nav\">\r\n          {/* sign in */}\r\n          <Link to={!user && \"/login\"}>\r\n            <div onClick={handleAuthentication} className=\"header-option\">\r\n              <span className=\"header-optionLineOne\">\r\n                Hello {user ? user.email : \"Guest\"}\r\n              </span>\r\n              <span className=\"header-optionLineTwo\">\r\n                {user ? \"Sign Out\" : \"Sign In\"}\r\n              </span>\r\n            </div>\r\n          </Link>\r\n\r\n          {/* returns and orders */}\r\n          <Link to=\"/Orders\">\r\n            <div className=\"header-option\">\r\n              <span className=\"header-optionLineOne\">Returns</span>\r\n              <span className=\"header-optionLineTwo\">& Orders</span>\r\n            </div>\r\n          </Link>\r\n\r\n          {/* prime */}\r\n          <div className=\"header-option\">\r\n            <span className=\"header-optionLineOne\">Your</span>\r\n            <span className=\"header-optionLineTwo\">Prime</span>\r\n          </div>\r\n\r\n          {/* basket */}\r\n          <Link to=\"/checkout\">\r\n            <div className=\"header-optionBasket\">\r\n              <ShoppingCartIcon />\r\n              <span className=\"header-optionLineTwo header-basketCount\">\r\n                {basket?.length}\r\n              </span>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"subHeader\">\r\n        <div className=\"hamburger\">\r\n          <MenuIcon />\r\n        </div>\r\n        <p>All</p>\r\n        <p>Gift Cards</p>\r\n        <p>Best Sellars</p>\r\n        <p>Prime</p>\r\n        <p>Customer Service</p>\r\n        <p>New Releases</p>\r\n        <p>Find a Gift</p>\r\n        <p>Whole Foods</p>\r\n        <p>AmazonBasics</p>\r\n        <p>Sell</p>\r\n        <p>Coupons</p>\r\n        <p>Today's Deals</p>\r\n        <p>Free Shipping</p>\r\n        <p>#FoundItOnAmazon</p>\r\n        <h4>FREE delivery by Dec 24 with Prime</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\firebase.js",[],"C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\Login.js",["98"],"import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\nimport { useState } from \"react\";\r\nimport { auth } from \"./firebase\";\r\n\r\nfunction Login() {\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const signIn = (e) => {\r\n    e.preventDefault();\r\n    //some fancy firebase login shit\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((auth) => history.push(\"/\"))\r\n      .catch((error) => alert(error.message));\r\n  };\r\n  const demoSignIn = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .signInWithEmailAndPassword(\"demo@demo.com\", \"demopassword\")\r\n      .then((auth) => history.push(\"/\"))\r\n      .catch((error) => alert(error.message));\r\n  };\r\n  const register = (e) => {\r\n    e.preventDefault();\r\n    //some fancy firebase register shit\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((auth) => {\r\n        //successfully created new user with email and password\r\n        console.log(auth);\r\n        if (auth) {\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((error) => alert(error.message));\r\n  };\r\n  return (\r\n    <div className=\"login\">\r\n      <Link to=\"/\">\r\n        <img\r\n          className=\"login-logo\"\r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a9/Amazon_logo.svg/1024px-Amazon_logo.svg.png\"\r\n        />\r\n      </Link>\r\n      <div className=\"login-container\">\r\n        <h1>Sign-in to FAKE AMAZON!! NOT THE REAL AMAZON! THIS IS A CLONE</h1>\r\n        <form>\r\n          <h5>E-mail</h5>\r\n          <input\r\n            type=\"text\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <h5>Password</h5>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <button\r\n            onClick={signIn}\r\n            type=\"submit\"\r\n            className=\"login-sign-in-button\"\r\n          >\r\n            Sign in\r\n          </button>\r\n\r\n          <button\r\n            onClick={demoSignIn}\r\n            type=\"submit\"\r\n            className=\"login-sign-in-button\"\r\n          >\r\n            Demo Login\r\n          </button>\r\n        </form>\r\n        <p>\r\n          By signing-in you agree to the Amazon FAKE CLONE Conditions of Use &\r\n          Sale. Please see our Privacy Notice, our Cookies Notice, and our\r\n          Interest-Based Ads Notice.\r\n        </p>\r\n        <button onClick={register} className=\"login-registrationButton\">\r\n          Create your Amazon Account\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\Footer.js",[],"C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\Orders.js",["99","100"],"import React, { useState, useEffect } from \"react\";\r\nimport { db } from \"./firebase\";\r\nimport Order from \"./Order\";\r\nimport \"./Orders.css\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction Orders() {\r\n  const [orders, setOrders] = useState([]);\r\n  const [{ basket, user }, dispatch] = useStateValue([]);\r\n  useEffect(() => {\r\n    if (user) {\r\n      db.collection(\"users\") //access the user from database\r\n        .doc(user?.uid) // ^\r\n        .collection(\"orders\") // ^\r\n        .orderBy(\"created\", \"desc\") // sort by the creation date\r\n        .onSnapshot((\r\n          snapshot // grab a realtime snapshot of the database\r\n        ) =>\r\n          setOrders(\r\n            snapshot.docs.map((doc) => ({\r\n              // iterate through all orders and map them to an array\r\n              id: doc.id,\r\n              data: doc.data(), // all data from that order (basket, amount, etc)\r\n            }))\r\n          )\r\n        );\r\n    } else {\r\n      setOrders([]);\r\n    }\r\n  }, [user]);\r\n  return (\r\n    <div className=\"orders\">\r\n      <h1>Your Orders: </h1>\r\n      <div className=\"orders-order\">\r\n        {orders?.map((order) => (\r\n          <Order order={order} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Orders;\r\n","C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\Payment.js",["101","102"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport CheckoutProduct from \"./CheckoutProduct\";\r\nimport Header from \"./Header\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport \"./payment.css\";\r\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { getBasketTotal } from \"./reducer\";\r\nimport axios from \"./axios\";\r\nimport { db } from \"./firebase\";\r\n\r\nfunction Payment() {\r\n  const [{ basket, user }, dispatch] = useStateValue();\r\n  const history = useHistory();\r\n  const [error, setError] = useState(null);\r\n  const [disabled, setDisabled] = useState(true);\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const [succeeded, setSucceeded] = useState(false);\r\n  const [processing, setProcessing] = useState(\"\");\r\n\r\n  const [clientSecret, setClientSecret] = useState(true);\r\n\r\n  useEffect(() => {\r\n    //generate stripe secret that allows us to charge the customer\r\n    const getClientSecret = async () => {\r\n      //axios allows API calls\r\n      const response = await axios({\r\n        method: \"post\",\r\n        //stripe expects the total in a currencies subunits\r\n        url: `/payments/create?total=${getBasketTotal(basket) * 100}`,\r\n      });\r\n      setClientSecret(response.data.clientSecret);\r\n    };\r\n    getClientSecret();\r\n  }, [basket]);\r\n\r\n  // console.log(\"the secret is: \", clientSecret);\r\n\r\n  const handleSubmit = async (event) => {\r\n    //fancy stripe stuff\r\n    event.preventDefault();\r\n    setProcessing(true);\r\n    const payload = await stripe\r\n      .confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n          card: elements.getElement(CardElement),\r\n        },\r\n      })\r\n      .then(({ paymentIntent }) => {\r\n        //paymentIntent = payment confirmation\r\n        //payment was successful\r\n\r\n        db.collection(\"users\") //in the db go to table users\r\n          .doc(user?.uid) //in users go to user id\r\n          .collection(\"orders\") // in user id go to orders\r\n          .doc(paymentIntent.id) // set the data for that payment id\r\n          .set({\r\n            basket: basket, //put basket info in before emptying it\r\n            amount: paymentIntent.amount, // gets the $ amount from stripe\r\n            created: paymentIntent.created, //gets time stamp that the order was created from stripe\r\n          });\r\n\r\n        setSucceeded(true);\r\n        setError(null);\r\n        setProcessing(false);\r\n        //after payment is successful empty the basket\r\n        dispatch({\r\n          type: \"EMPTY_BASKET\",\r\n        });\r\n        //redirect to your orders page\r\n        history.replace(\"/orders\");\r\n      });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    // Listen for changes in the card element\r\n    // and display any errors as the customer types their card details\r\n    setDisabled(event.empy);\r\n    setError(event.error ? event.error.message : \"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment\">\r\n      <div className=\"payment-container\">\r\n        <h1>\r\n          Checkout {<Link to=\"/checkout\">({basket?.length} items)</Link>}{\" \"}\r\n        </h1>\r\n        {/* payment section - delivery address */}\r\n        <div className=\"payment-section\">\r\n          <div className=\"payment-title\">\r\n            <h3>Delivery Address</h3>\r\n          </div>\r\n          <div className=\"payment-address\">\r\n            <p>{user?.email}</p>\r\n            <p>123 React Lane</p>\r\n            <p>Los Angeles, CA</p>\r\n          </div>\r\n        </div>\r\n        {/* payment section - review items */}\r\n        <div className=\"payment-section\">\r\n          <div className=\"payment-title\">\r\n            <h3>Review items and delivery</h3>\r\n          </div>\r\n          <div className=\"payment-items\">\r\n            {/* products in cart go here */}\r\n            {basket.map((item) => (\r\n              <CheckoutProduct\r\n                id={item.id}\r\n                title={item.title}\r\n                image={item.image}\r\n                price={item.price}\r\n                rating={item.rating}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        {/* payment section - payment method */}\r\n        <div className=\"payment-section\">\r\n          <div className=\"payment-title\">\r\n            <h3>Payment Method</h3>\r\n          </div>\r\n          <div className=\"payment-details\">\r\n            {/* stripe magic goes here */}\r\n            <form onSubmit={handleSubmit}>\r\n              <CardElement onChange={handleChange} />\r\n\r\n              <div className=\"payment-priceContainer\">\r\n                <CurrencyFormat\r\n                  renderText={(value) => <h3>Order Total: {value}</h3>}\r\n                  decimalScale={2}\r\n                  value={getBasketTotal(basket)}\r\n                  displayType={\"text\"}\r\n                  thousandSeparator={true}\r\n                  prefix={\"$\"}\r\n                />\r\n                <button disabled={processing || disabled || succeeded}>\r\n                  <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\r\n                </button>\r\n                <p>Test card is 42 repeating until full</p>\r\n              </div>\r\n              {/* errors */}\r\n              {error && <div>{error}</div>}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Payment;\r\n","C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\stripePromise.js",[],"C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\Subtotal.js",["103"],"import React from \"react\";\r\nimport \"./subtotal.css\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { getBasketTotal } from \"./reducer\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nfunction Subtotal() {\r\n    const history = useHistory();\r\n  const [{ basket }, dispatch] = useStateValue();\r\n  return (\r\n    <div className=\"subtotal\">\r\n      <CurrencyFormat\r\n        renderText={(value) => (\r\n          <>\r\n            <p>\r\n              Subtotal ({basket?.length} items): <strong>{value}</strong>\r\n            </p>\r\n            <small className=\"subtotal-gift\">\r\n              <input type=\"checkbox\" />\r\n              this order contains a gift\r\n            </small>\r\n          </>\r\n        )}\r\n        decimalScale={2}\r\n        value={getBasketTotal(basket)}\r\n        displayType={\"text\"}\r\n        thousandSeparator={true}\r\n        prefix={\"$\"}\r\n      />\r\n      <button onClick={e => history.push('/payment')}>Proceed to Checkout</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Subtotal;\r\n","C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\Product.js",["104"],"import React from \"react\";\r\nimport \"./Product.css\";\r\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\ntoast.configure();\r\nfunction getUnfilled(rating) {\r\n  if (rating) {\r\n    let x = 5 - rating;\r\n    return x;\r\n  } else {\r\n    return 5;\r\n  }\r\n}\r\n\r\nfunction Product({ id, title, image, price, rating, alt }) {\r\n  if (!rating) {\r\n    rating = 0;\r\n  }\r\n  const [{ basket }, dispatch] = useStateValue();\r\n  const addToBasket = () => {\r\n    //dispatch action to data layer\r\n    dispatch({\r\n      type: \"ADD_TO_BASKET\",\r\n      item: {\r\n        id: id,\r\n        title: title,\r\n        image: image,\r\n        price: price,\r\n        rating: rating,\r\n      },\r\n    });\r\n    toast(title + \" Added to Cart\", {\r\n      position: toast.POSITION.BOTTOM_RIGHT,\r\n      hideProgressBar: true,\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"product\">\r\n      <div className=\"product-info\">\r\n        <p>{title}</p>\r\n        <p className=\"product-price\">\r\n          <small>$</small>\r\n          <strong>{price}</strong>\r\n        </p>\r\n        <div className=\"product-rating\">\r\n          {Array(rating)\r\n            .fill()\r\n            .map((_, i) => {\r\n              return <StarIcon style={{ color: \"rgb(240, 193, 75)\" }} />;\r\n            })}\r\n          {Array(getUnfilled(rating))\r\n            .fill()\r\n            .map((_, i) => {\r\n              return <StarBorderIcon style={{ color: \"rgb(240, 193, 75)\" }} />;\r\n            })}\r\n        </div>\r\n      </div>\r\n      <img src={image} alt={alt} />\r\n      <button onClick={addToBasket}>Add to Cart</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n","C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\CheckoutProduct.js",["105","106"],"import React from \"react\";\r\nimport \"./CheckoutProduct.css\";\r\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction getUnfilled(rating) {\r\n  if (rating) {\r\n    let x = 5 - rating;\r\n    return x;\r\n  } else {\r\n    return 5;\r\n  }\r\n}\r\n\r\nfunction CheckoutProduct({ id, image, title, price, rating, hideButton }) {\r\n  const [{ basket }, dispatch] = useStateValue(); //API to get the state of the basket\r\n  const removeFromBasket = () => {\r\n    dispatch({ type: \"REMOVE_FROM_BASKET\", id: id });\r\n  };\r\n  return (\r\n    <div className=\"checkoutProduct\">\r\n      <img className=\"checkoutProduct-image\" src={image} />\r\n      <div className=\"checkoutProduct-info\">\r\n        <p className=\"checkoutProduct-title\">{title}</p>\r\n        <p className=\"checkoutProduct-price\">\r\n          <small>$</small>\r\n          <strong>{price}</strong>\r\n        </p>\r\n        <div className=\"product-rating\">\r\n          {Array(rating)\r\n            .fill()\r\n            .map((_, i) => {\r\n              return <StarIcon style={{ color: \"rgb(240, 193, 75)\" }} />;\r\n            })}\r\n          {Array(getUnfilled(rating))\r\n            .fill()\r\n            .map((_, i) => {\r\n              return <StarBorderIcon style={{ color: \"rgb(240, 193, 75)\" }} />;\r\n            })}\r\n        </div>\r\n        {!hideButton && (\r\n          <button onClick={removeFromBasket} className=\"checkoutProduct-button\">\r\n            Remove from cart\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckoutProduct;\r\n","C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\Order.js",[],"C:\\Users\\ljste\\Sync\\ServerSynced\\CODE\\React\\amazon-clone\\src\\axios.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":1,"column":10,"nodeType":"113","messageId":"114","endLine":1,"endColumn":19},{"ruleId":"115","severity":1,"message":"116","line":34,"column":11,"nodeType":"117","messageId":"118","endLine":34,"endColumn":74},{"ruleId":"119","severity":1,"message":"120","line":20,"column":10,"nodeType":"121","messageId":"122","endLine":20,"endColumn":12},{"ruleId":"123","severity":1,"message":"124","line":39,"column":6,"nodeType":"125","endLine":39,"endColumn":8,"suggestions":"126"},{"ruleId":"111","severity":1,"message":"127","line":8,"column":28,"nodeType":"113","messageId":"114","endLine":8,"endColumn":36},{"ruleId":"111","severity":1,"message":"127","line":10,"column":28,"nodeType":"113","messageId":"114","endLine":10,"endColumn":36},{"ruleId":"128","severity":1,"message":"129","line":21,"column":11,"nodeType":"130","endLine":24,"endColumn":13},{"ruleId":"128","severity":1,"message":"129","line":43,"column":9,"nodeType":"130","endLine":46,"endColumn":11},{"ruleId":"111","severity":1,"message":"131","line":9,"column":12,"nodeType":"113","messageId":"114","endLine":9,"endColumn":18},{"ruleId":"111","severity":1,"message":"127","line":9,"column":28,"nodeType":"113","messageId":"114","endLine":9,"endColumn":36},{"ruleId":"111","severity":1,"message":"132","line":4,"column":8,"nodeType":"113","messageId":"114","endLine":4,"endColumn":14},{"ruleId":"111","severity":1,"message":"133","line":46,"column":11,"nodeType":"113","messageId":"114","endLine":46,"endColumn":18},{"ruleId":"111","severity":1,"message":"127","line":11,"column":22,"nodeType":"113","messageId":"114","endLine":11,"endColumn":30},{"ruleId":"111","severity":1,"message":"131","line":22,"column":12,"nodeType":"113","messageId":"114","endLine":22,"endColumn":18},{"ruleId":"111","severity":1,"message":"131","line":17,"column":12,"nodeType":"113","messageId":"114","endLine":17,"endColumn":18},{"ruleId":"128","severity":1,"message":"129","line":23,"column":7,"nodeType":"130","endLine":23,"endColumn":60},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'Satellite' is defined but never used.","Identifier","unusedVar","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["136"],"'dispatch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'basket' is assigned a value but never used.","'Header' is defined but never used.","'payload' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},"Update the dependencies array to be: [dispatch]",{"range":"139","text":"140"},[1196,1198],"[dispatch]"]